#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Travel_Management_System
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TravelDatabase")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUserInfo(UserInfo instance);
    partial void UpdateUserInfo(UserInfo instance);
    partial void DeleteUserInfo(UserInfo instance);
    partial void InsertAdminTable(AdminTable instance);
    partial void UpdateAdminTable(AdminTable instance);
    partial void DeleteAdminTable(AdminTable instance);
    partial void InsertTour(Tour instance);
    partial void UpdateTour(Tour instance);
    partial void DeleteTour(Tour instance);
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertPlace(Place instance);
    partial void UpdatePlace(Place instance);
    partial void DeletePlace(Place instance);
    partial void InsertHOTEL(HOTEL instance);
    partial void UpdateHOTEL(HOTEL instance);
    partial void DeleteHOTEL(HOTEL instance);
    partial void InsertTour_booking(Tour_booking instance);
    partial void UpdateTour_booking(Tour_booking instance);
    partial void DeleteTour_booking(Tour_booking instance);
    partial void InsertHOTEL_BOOKING(HOTEL_BOOKING instance);
    partial void UpdateHOTEL_BOOKING(HOTEL_BOOKING instance);
    partial void DeleteHOTEL_BOOKING(HOTEL_BOOKING instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TravelDatabaseConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<UserInfo> UserInfos
		{
			get
			{
				return this.GetTable<UserInfo>();
			}
		}
		
		public System.Data.Linq.Table<AdminTable> AdminTables
		{
			get
			{
				return this.GetTable<AdminTable>();
			}
		}
		
		public System.Data.Linq.Table<Tour> Tours
		{
			get
			{
				return this.GetTable<Tour>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<Place> Places
		{
			get
			{
				return this.GetTable<Place>();
			}
		}
		
		public System.Data.Linq.Table<HOTEL> HOTELs
		{
			get
			{
				return this.GetTable<HOTEL>();
			}
		}
		
		public System.Data.Linq.Table<Tour_booking> Tour_bookings
		{
			get
			{
				return this.GetTable<Tour_booking>();
			}
		}
		
		public System.Data.Linq.Table<HOTEL_BOOKING> HOTEL_BOOKINGs
		{
			get
			{
				return this.GetTable<HOTEL_BOOKING>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserInfo")]
	public partial class UserInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Email;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Gender;
		
		private string _Password;
		
		private System.DateTime _dob;
		
		private string _Street;
		
		private string _City;
		
		private string _State;
		
		private EntitySet<Tour_booking> _Tour_bookings;
		
		private EntitySet<HOTEL_BOOKING> _HOTEL_BOOKINGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OndobChanging(System.DateTime value);
    partial void OndobChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    #endregion
		
		public UserInfo()
		{
			this._Tour_bookings = new EntitySet<Tour_booking>(new Action<Tour_booking>(this.attach_Tour_bookings), new Action<Tour_booking>(this.detach_Tour_bookings));
			this._HOTEL_BOOKINGs = new EntitySet<HOTEL_BOOKING>(new Action<HOTEL_BOOKING>(this.attach_HOTEL_BOOKINGs), new Action<HOTEL_BOOKING>(this.detach_HOTEL_BOOKINGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="Date NOT NULL")]
		public System.DateTime dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_Tour_booking", Storage="_Tour_bookings", ThisKey="Email", OtherKey="Email")]
		public EntitySet<Tour_booking> Tour_bookings
		{
			get
			{
				return this._Tour_bookings;
			}
			set
			{
				this._Tour_bookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_HOTEL_BOOKING", Storage="_HOTEL_BOOKINGs", ThisKey="Email", OtherKey="user_email")]
		public EntitySet<HOTEL_BOOKING> HOTEL_BOOKINGs
		{
			get
			{
				return this._HOTEL_BOOKINGs;
			}
			set
			{
				this._HOTEL_BOOKINGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tour_bookings(Tour_booking entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = this;
		}
		
		private void detach_Tour_bookings(Tour_booking entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = null;
		}
		
		private void attach_HOTEL_BOOKINGs(HOTEL_BOOKING entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = this;
		}
		
		private void detach_HOTEL_BOOKINGs(HOTEL_BOOKING entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminTable")]
	public partial class AdminTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public AdminTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tour")]
	public partial class Tour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _TOUR_ID;
		
		private string _TOUR_NAME;
		
		private string _PLACE;
		
		private decimal _DAYS;
		
		private decimal _PRICE;
		
		private string _LOCATIONS;
		
		private string _TOUR_INFO;
		
		private string _pic;
		
		private EntitySet<Tour_booking> _Tour_bookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTOUR_IDChanging(decimal value);
    partial void OnTOUR_IDChanged();
    partial void OnTOUR_NAMEChanging(string value);
    partial void OnTOUR_NAMEChanged();
    partial void OnPLACEChanging(string value);
    partial void OnPLACEChanged();
    partial void OnDAYSChanging(decimal value);
    partial void OnDAYSChanged();
    partial void OnPRICEChanging(decimal value);
    partial void OnPRICEChanged();
    partial void OnLOCATIONSChanging(string value);
    partial void OnLOCATIONSChanged();
    partial void OnTOUR_INFOChanging(string value);
    partial void OnTOUR_INFOChanged();
    partial void OnpicChanging(string value);
    partial void OnpicChanged();
    #endregion
		
		public Tour()
		{
			this._Tour_bookings = new EntitySet<Tour_booking>(new Action<Tour_booking>(this.attach_Tour_bookings), new Action<Tour_booking>(this.detach_Tour_bookings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOUR_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(5,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal TOUR_ID
		{
			get
			{
				return this._TOUR_ID;
			}
			set
			{
				if ((this._TOUR_ID != value))
				{
					this.OnTOUR_IDChanging(value);
					this.SendPropertyChanging();
					this._TOUR_ID = value;
					this.SendPropertyChanged("TOUR_ID");
					this.OnTOUR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOUR_NAME", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TOUR_NAME
		{
			get
			{
				return this._TOUR_NAME;
			}
			set
			{
				if ((this._TOUR_NAME != value))
				{
					this.OnTOUR_NAMEChanging(value);
					this.SendPropertyChanging();
					this._TOUR_NAME = value;
					this.SendPropertyChanged("TOUR_NAME");
					this.OnTOUR_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLACE", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PLACE
		{
			get
			{
				return this._PLACE;
			}
			set
			{
				if ((this._PLACE != value))
				{
					this.OnPLACEChanging(value);
					this.SendPropertyChanging();
					this._PLACE = value;
					this.SendPropertyChanged("PLACE");
					this.OnPLACEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAYS", DbType="Decimal(2,0) NOT NULL")]
		public decimal DAYS
		{
			get
			{
				return this._DAYS;
			}
			set
			{
				if ((this._DAYS != value))
				{
					this.OnDAYSChanging(value);
					this.SendPropertyChanging();
					this._DAYS = value;
					this.SendPropertyChanged("DAYS");
					this.OnDAYSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE", DbType="Decimal(6,0) NOT NULL")]
		public decimal PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this.OnPRICEChanging(value);
					this.SendPropertyChanging();
					this._PRICE = value;
					this.SendPropertyChanged("PRICE");
					this.OnPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOCATIONS", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LOCATIONS
		{
			get
			{
				return this._LOCATIONS;
			}
			set
			{
				if ((this._LOCATIONS != value))
				{
					this.OnLOCATIONSChanging(value);
					this.SendPropertyChanging();
					this._LOCATIONS = value;
					this.SendPropertyChanged("LOCATIONS");
					this.OnLOCATIONSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOUR_INFO", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string TOUR_INFO
		{
			get
			{
				return this._TOUR_INFO;
			}
			set
			{
				if ((this._TOUR_INFO != value))
				{
					this.OnTOUR_INFOChanging(value);
					this.SendPropertyChanging();
					this._TOUR_INFO = value;
					this.SendPropertyChanged("TOUR_INFO");
					this.OnTOUR_INFOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pic", DbType="VarChar(200)")]
		public string pic
		{
			get
			{
				return this._pic;
			}
			set
			{
				if ((this._pic != value))
				{
					this.OnpicChanging(value);
					this.SendPropertyChanging();
					this._pic = value;
					this.SendPropertyChanged("pic");
					this.OnpicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_Tour_booking", Storage="_Tour_bookings", ThisKey="TOUR_ID", OtherKey="Tour_id")]
		public EntitySet<Tour_booking> Tour_bookings
		{
			get
			{
				return this._Tour_bookings;
			}
			set
			{
				this._Tour_bookings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tour_bookings(Tour_booking entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_Tour_bookings(Tour_booking entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.States")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _State_name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnState_nameChanging(string value);
    partial void OnState_nameChanged();
    #endregion
		
		public State()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State_name", DbType="VarChar(50)")]
		public string State_name
		{
			get
			{
				return this._State_name;
			}
			set
			{
				if ((this._State_name != value))
				{
					this.OnState_nameChanging(value);
					this.SendPropertyChanging();
					this._State_name = value;
					this.SendPropertyChanged("State_name");
					this.OnState_nameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Place")]
	public partial class Place : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _place_id;
		
		private string _city;
		
		private string _state;
		
		private string _description;
		
		private string _pic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onplace_idChanging(int value);
    partial void Onplace_idChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnpicChanging(string value);
    partial void OnpicChanged();
    #endregion
		
		public Place()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_place_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int place_id
		{
			get
			{
				return this._place_id;
			}
			set
			{
				if ((this._place_id != value))
				{
					this.Onplace_idChanging(value);
					this.SendPropertyChanging();
					this._place_id = value;
					this.SendPropertyChanged("place_id");
					this.Onplace_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pic", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string pic
		{
			get
			{
				return this._pic;
			}
			set
			{
				if ((this._pic != value))
				{
					this.OnpicChanging(value);
					this.SendPropertyChanging();
					this._pic = value;
					this.SendPropertyChanged("pic");
					this.OnpicChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOTELS")]
	public partial class HOTEL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _hotel_email;
		
		private string _HOTEL_NAME;
		
		private string _STREET;
		
		private string _CITY;
		
		private string _STATE;
		
		private System.Nullable<decimal> _PHONE1;
		
		private decimal _PHONE2;
		
		private decimal _ROOM_COST;
		
		private string _pic;
		
		private string _password;
		
		private decimal _hotel_id;
		
		private EntitySet<HOTEL_BOOKING> _HOTEL_BOOKINGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onhotel_emailChanging(string value);
    partial void Onhotel_emailChanged();
    partial void OnHOTEL_NAMEChanging(string value);
    partial void OnHOTEL_NAMEChanged();
    partial void OnSTREETChanging(string value);
    partial void OnSTREETChanged();
    partial void OnCITYChanging(string value);
    partial void OnCITYChanged();
    partial void OnSTATEChanging(string value);
    partial void OnSTATEChanged();
    partial void OnPHONE1Changing(System.Nullable<decimal> value);
    partial void OnPHONE1Changed();
    partial void OnPHONE2Changing(decimal value);
    partial void OnPHONE2Changed();
    partial void OnROOM_COSTChanging(decimal value);
    partial void OnROOM_COSTChanged();
    partial void OnpicChanging(string value);
    partial void OnpicChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onhotel_idChanging(decimal value);
    partial void Onhotel_idChanged();
    #endregion
		
		public HOTEL()
		{
			this._HOTEL_BOOKINGs = new EntitySet<HOTEL_BOOKING>(new Action<HOTEL_BOOKING>(this.attach_HOTEL_BOOKINGs), new Action<HOTEL_BOOKING>(this.detach_HOTEL_BOOKINGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hotel_email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string hotel_email
		{
			get
			{
				return this._hotel_email;
			}
			set
			{
				if ((this._hotel_email != value))
				{
					this.Onhotel_emailChanging(value);
					this.SendPropertyChanging();
					this._hotel_email = value;
					this.SendPropertyChanged("hotel_email");
					this.Onhotel_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEL_NAME", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string HOTEL_NAME
		{
			get
			{
				return this._HOTEL_NAME;
			}
			set
			{
				if ((this._HOTEL_NAME != value))
				{
					this.OnHOTEL_NAMEChanging(value);
					this.SendPropertyChanging();
					this._HOTEL_NAME = value;
					this.SendPropertyChanged("HOTEL_NAME");
					this.OnHOTEL_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STREET", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string STREET
		{
			get
			{
				return this._STREET;
			}
			set
			{
				if ((this._STREET != value))
				{
					this.OnSTREETChanging(value);
					this.SendPropertyChanging();
					this._STREET = value;
					this.SendPropertyChanged("STREET");
					this.OnSTREETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CITY
		{
			get
			{
				return this._CITY;
			}
			set
			{
				if ((this._CITY != value))
				{
					this.OnCITYChanging(value);
					this.SendPropertyChanging();
					this._CITY = value;
					this.SendPropertyChanged("CITY");
					this.OnCITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this.OnSTATEChanging(value);
					this.SendPropertyChanging();
					this._STATE = value;
					this.SendPropertyChanged("STATE");
					this.OnSTATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE1", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PHONE1
		{
			get
			{
				return this._PHONE1;
			}
			set
			{
				if ((this._PHONE1 != value))
				{
					this.OnPHONE1Changing(value);
					this.SendPropertyChanging();
					this._PHONE1 = value;
					this.SendPropertyChanged("PHONE1");
					this.OnPHONE1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE2", DbType="Decimal(10,0) NOT NULL")]
		public decimal PHONE2
		{
			get
			{
				return this._PHONE2;
			}
			set
			{
				if ((this._PHONE2 != value))
				{
					this.OnPHONE2Changing(value);
					this.SendPropertyChanging();
					this._PHONE2 = value;
					this.SendPropertyChanged("PHONE2");
					this.OnPHONE2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROOM_COST", DbType="Decimal(5,0) NOT NULL")]
		public decimal ROOM_COST
		{
			get
			{
				return this._ROOM_COST;
			}
			set
			{
				if ((this._ROOM_COST != value))
				{
					this.OnROOM_COSTChanging(value);
					this.SendPropertyChanging();
					this._ROOM_COST = value;
					this.SendPropertyChanged("ROOM_COST");
					this.OnROOM_COSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pic", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string pic
		{
			get
			{
				return this._pic;
			}
			set
			{
				if ((this._pic != value))
				{
					this.OnpicChanging(value);
					this.SendPropertyChanging();
					this._pic = value;
					this.SendPropertyChanged("pic");
					this.OnpicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hotel_id", AutoSync=AutoSync.OnInsert, DbType="Decimal(3,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal hotel_id
		{
			get
			{
				return this._hotel_id;
			}
			set
			{
				if ((this._hotel_id != value))
				{
					this.Onhotel_idChanging(value);
					this.SendPropertyChanging();
					this._hotel_id = value;
					this.SendPropertyChanged("hotel_id");
					this.Onhotel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOTEL_HOTEL_BOOKING", Storage="_HOTEL_BOOKINGs", ThisKey="hotel_id", OtherKey="hotel_id")]
		public EntitySet<HOTEL_BOOKING> HOTEL_BOOKINGs
		{
			get
			{
				return this._HOTEL_BOOKINGs;
			}
			set
			{
				this._HOTEL_BOOKINGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOTEL_BOOKINGs(HOTEL_BOOKING entity)
		{
			this.SendPropertyChanging();
			entity.HOTEL = this;
		}
		
		private void detach_HOTEL_BOOKINGs(HOTEL_BOOKING entity)
		{
			this.SendPropertyChanging();
			entity.HOTEL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tour_booking")]
	public partial class Tour_booking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Booking_id;
		
		private string _Email;
		
		private decimal _Tour_id;
		
		private decimal _No_of_persons;
		
		private decimal _Total_cost;
		
		private EntityRef<UserInfo> _UserInfo;
		
		private EntityRef<Tour> _Tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBooking_idChanging(int value);
    partial void OnBooking_idChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTour_idChanging(decimal value);
    partial void OnTour_idChanged();
    partial void OnNo_of_personsChanging(decimal value);
    partial void OnNo_of_personsChanged();
    partial void OnTotal_costChanging(decimal value);
    partial void OnTotal_costChanged();
    #endregion
		
		public Tour_booking()
		{
			this._UserInfo = default(EntityRef<UserInfo>);
			this._Tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Booking_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Booking_id
		{
			get
			{
				return this._Booking_id;
			}
			set
			{
				if ((this._Booking_id != value))
				{
					this.OnBooking_idChanging(value);
					this.SendPropertyChanging();
					this._Booking_id = value;
					this.SendPropertyChanged("Booking_id");
					this.OnBooking_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					if (this._UserInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tour_id", DbType="Decimal(5,0) NOT NULL")]
		public decimal Tour_id
		{
			get
			{
				return this._Tour_id;
			}
			set
			{
				if ((this._Tour_id != value))
				{
					if (this._Tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTour_idChanging(value);
					this.SendPropertyChanging();
					this._Tour_id = value;
					this.SendPropertyChanged("Tour_id");
					this.OnTour_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No_of_persons", DbType="Decimal(2,0) NOT NULL")]
		public decimal No_of_persons
		{
			get
			{
				return this._No_of_persons;
			}
			set
			{
				if ((this._No_of_persons != value))
				{
					this.OnNo_of_personsChanging(value);
					this.SendPropertyChanging();
					this._No_of_persons = value;
					this.SendPropertyChanged("No_of_persons");
					this.OnNo_of_personsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_cost", DbType="Decimal(8,0) NOT NULL")]
		public decimal Total_cost
		{
			get
			{
				return this._Total_cost;
			}
			set
			{
				if ((this._Total_cost != value))
				{
					this.OnTotal_costChanging(value);
					this.SendPropertyChanging();
					this._Total_cost = value;
					this.SendPropertyChanged("Total_cost");
					this.OnTotal_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_Tour_booking", Storage="_UserInfo", ThisKey="Email", OtherKey="Email", IsForeignKey=true)]
		public UserInfo UserInfo
		{
			get
			{
				return this._UserInfo.Entity;
			}
			set
			{
				UserInfo previousValue = this._UserInfo.Entity;
				if (((previousValue != value) 
							|| (this._UserInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserInfo.Entity = null;
						previousValue.Tour_bookings.Remove(this);
					}
					this._UserInfo.Entity = value;
					if ((value != null))
					{
						value.Tour_bookings.Add(this);
						this._Email = value.Email;
					}
					else
					{
						this._Email = default(string);
					}
					this.SendPropertyChanged("UserInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_Tour_booking", Storage="_Tour", ThisKey="Tour_id", OtherKey="TOUR_ID", IsForeignKey=true)]
		public Tour Tour
		{
			get
			{
				return this._Tour.Entity;
			}
			set
			{
				Tour previousValue = this._Tour.Entity;
				if (((previousValue != value) 
							|| (this._Tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tour.Entity = null;
						previousValue.Tour_bookings.Remove(this);
					}
					this._Tour.Entity = value;
					if ((value != null))
					{
						value.Tour_bookings.Add(this);
						this._Tour_id = value.TOUR_ID;
					}
					else
					{
						this._Tour_id = default(decimal);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOTEL_BOOKING")]
	public partial class HOTEL_BOOKING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _user_email;
		
		private decimal _hotel_id;
		
		private decimal _PERSONS;
		
		private int _id;
		
		private decimal _Total_Cost;
		
		private EntityRef<HOTEL> _HOTEL;
		
		private EntityRef<UserInfo> _UserInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_emailChanging(string value);
    partial void Onuser_emailChanged();
    partial void Onhotel_idChanging(decimal value);
    partial void Onhotel_idChanged();
    partial void OnPERSONSChanging(decimal value);
    partial void OnPERSONSChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnTotal_CostChanging(decimal value);
    partial void OnTotal_CostChanged();
    #endregion
		
		public HOTEL_BOOKING()
		{
			this._HOTEL = default(EntityRef<HOTEL>);
			this._UserInfo = default(EntityRef<UserInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string user_email
		{
			get
			{
				return this._user_email;
			}
			set
			{
				if ((this._user_email != value))
				{
					if (this._UserInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_emailChanging(value);
					this.SendPropertyChanging();
					this._user_email = value;
					this.SendPropertyChanged("user_email");
					this.Onuser_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hotel_id", DbType="Decimal(3,0) NOT NULL")]
		public decimal hotel_id
		{
			get
			{
				return this._hotel_id;
			}
			set
			{
				if ((this._hotel_id != value))
				{
					if (this._HOTEL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onhotel_idChanging(value);
					this.SendPropertyChanging();
					this._hotel_id = value;
					this.SendPropertyChanged("hotel_id");
					this.Onhotel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERSONS", DbType="Decimal(3,0) NOT NULL")]
		public decimal PERSONS
		{
			get
			{
				return this._PERSONS;
			}
			set
			{
				if ((this._PERSONS != value))
				{
					this.OnPERSONSChanging(value);
					this.SendPropertyChanging();
					this._PERSONS = value;
					this.SendPropertyChanged("PERSONS");
					this.OnPERSONSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Cost", DbType="Decimal(8,0) NOT NULL")]
		public decimal Total_Cost
		{
			get
			{
				return this._Total_Cost;
			}
			set
			{
				if ((this._Total_Cost != value))
				{
					this.OnTotal_CostChanging(value);
					this.SendPropertyChanging();
					this._Total_Cost = value;
					this.SendPropertyChanged("Total_Cost");
					this.OnTotal_CostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOTEL_HOTEL_BOOKING", Storage="_HOTEL", ThisKey="hotel_id", OtherKey="hotel_id", IsForeignKey=true)]
		public HOTEL HOTEL
		{
			get
			{
				return this._HOTEL.Entity;
			}
			set
			{
				HOTEL previousValue = this._HOTEL.Entity;
				if (((previousValue != value) 
							|| (this._HOTEL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOTEL.Entity = null;
						previousValue.HOTEL_BOOKINGs.Remove(this);
					}
					this._HOTEL.Entity = value;
					if ((value != null))
					{
						value.HOTEL_BOOKINGs.Add(this);
						this._hotel_id = value.hotel_id;
					}
					else
					{
						this._hotel_id = default(decimal);
					}
					this.SendPropertyChanged("HOTEL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_HOTEL_BOOKING", Storage="_UserInfo", ThisKey="user_email", OtherKey="Email", IsForeignKey=true)]
		public UserInfo UserInfo
		{
			get
			{
				return this._UserInfo.Entity;
			}
			set
			{
				UserInfo previousValue = this._UserInfo.Entity;
				if (((previousValue != value) 
							|| (this._UserInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserInfo.Entity = null;
						previousValue.HOTEL_BOOKINGs.Remove(this);
					}
					this._UserInfo.Entity = value;
					if ((value != null))
					{
						value.HOTEL_BOOKINGs.Add(this);
						this._user_email = value.Email;
					}
					else
					{
						this._user_email = default(string);
					}
					this.SendPropertyChanged("UserInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
